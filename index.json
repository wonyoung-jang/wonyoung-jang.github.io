[{"content":"About me Hello!\nPersonally, I\u0026rsquo;m interested in programming, making music, formal logic, backpacking, magic and cardistry outbound , and cooking. This site is a collection of my projects and notes related to various areas of my life.\nI have a Bachelor of Science in Computer Science and a Bachelor of Arts in Psychology.\nI grew up in The Bronx, NYC where I started learning magic tricks at the age of 5, attended the Lang Science Program outbound at The American Museum of Natural History from the summer of fifth grade to high school graduation, built (awful) text-based games in BASIC, and where I eventually moved out of to pursue my higher education.\nAbout wonyoungjang.org This site is hosted using Hugo outbound and GitHub Pages outbound . It is created using Logseq Schrodinger outbound to convert Logseq\u0026rsquo;s markdown to suitable Hugo format markdown.\n","permalink":"https://wonyoungjang.org/about/","summary":"About me Hello!\nPersonally, I\u0026rsquo;m interested in programming, making music, formal logic, backpacking, magic and cardistry outbound , and cooking. This site is a collection of my projects and notes related to various areas of my life.\nI have a Bachelor of Science in Computer Science and a Bachelor of Arts in Psychology.\nI grew up in The Bronx, NYC where I started learning magic tricks at the age of 5, attended the Lang Science Program outbound at The American Museum of Natural History from the summer of fifth grade to high school graduation, built (awful) text-based games in BASIC, and where I eventually moved out of to pursue my higher education.","title":"About"},{"content":"","permalink":"https://wonyoungjang.org/resource/reference/colors/","summary":"","title":"Colors"},{"content":"","permalink":"https://wonyoungjang.org/resource/reference/components/","summary":"","title":"Components"},{"content":"Contact me directly The best way to contact me directly is through email at contact@wonyoungjang.org outbound .\nGive me feedback Give me feedback! I\u0026rsquo;m always learning and will take all of your feedback seriously.\n","permalink":"https://wonyoungjang.org/contact/","summary":"Contact me directly The best way to contact me directly is through email at contact@wonyoungjang.org outbound .\nGive me feedback Give me feedback! I\u0026rsquo;m always learning and will take all of your feedback seriously.","title":"Contact"},{"content":"","permalink":"https://wonyoungjang.org/resource/reference/feed-layout/","summary":"","title":"Feed layout"},{"content":"","permalink":"https://wonyoungjang.org/resource/reference/fixed-and-flexible-layout/","summary":"","title":"Fixed and flexible layout"},{"content":"What an admonition is An admonition is a special callout or highlighted section on a webpage used to draw attention to important information. It typically contains:\nA distinctive visual style (e.g., colored background, border, or icon)\nA label indicating the type of information (e.g., \u0026ldquo;Note\u0026rdquo;, \u0026ldquo;Warning\u0026rdquo;, \u0026ldquo;Tip\u0026rdquo;)\nContent that needs emphasis or special consideration\nAdmonitions are commonly used in documentation, tutorials, and informational websites to highlight key points, cautions, or additional details.\nAdmonitions warning This is a warning error This is a sign of caution stars This is important keep This is pinned lyrics This is a verse prompt_suggestion This is an export prompt_suggestion This is a latex export prompt_suggestion This is a ascii export query_stats This is a query sticky_note_2 This is a note lightbulb This is a tip description This is an example comment This is a comment format_quote This is a quote ","permalink":"https://wonyoungjang.org/resource/reference/list-of-admonitions-for-this-site/","summary":"What an admonition is An admonition is a special callout or highlighted section on a webpage used to draw attention to important information. It typically contains:\nA distinctive visual style (e.g., colored background, border, or icon)\nA label indicating the type of information (e.g., \u0026ldquo;Note\u0026rdquo;, \u0026ldquo;Warning\u0026rdquo;, \u0026ldquo;Tip\u0026rdquo;)\nContent that needs emphasis or special consideration\nAdmonitions are commonly used in documentation, tutorials, and informational websites to highlight key points, cautions, or additional details.","title":"List of Admonitions for This Site"},{"content":"","permalink":"https://wonyoungjang.org/resource/reference/list-detail-layout/","summary":"","title":"List-detail layout"},{"content":"","permalink":"https://wonyoungjang.org/resource/reference/motion/","summary":"","title":"Motion"},{"content":"","permalink":"https://wonyoungjang.org/project/","summary":"","title":"Projects"},{"content":"","permalink":"https://wonyoungjang.org/resource/reference/","summary":"","title":"Reference"},{"content":"","permalink":"https://wonyoungjang.org/resource/","summary":"","title":"Resources"},{"content":"","permalink":"https://wonyoungjang.org/search/","summary":"","title":"Search"},{"content":"","permalink":"https://wonyoungjang.org/resource/reference/shapes/","summary":"","title":"Shapes"},{"content":"","permalink":"https://wonyoungjang.org/resource/reference/single-pane-layout/","summary":"","title":"Single pane layout"},{"content":"","permalink":"https://wonyoungjang.org/sitemap/","summary":"","title":"Sitemap"},{"content":"","permalink":"https://wonyoungjang.org/project/software/","summary":"","title":"Software"},{"content":"","permalink":"https://wonyoungjang.org/resource/reference/split-pane-layout/","summary":"","title":"Split-pane layout"},{"content":"","permalink":"https://wonyoungjang.org/resource/reference/states-and-elevation/","summary":"","title":"States and elevation"},{"content":"","permalink":"https://wonyoungjang.org/resource/reference/supporting-pane-layout/","summary":"","title":"Supporting pane layout"},{"content":"","permalink":"https://wonyoungjang.org/resource/reference/typography/","summary":"","title":"Typography"},{"content":"","permalink":"https://wonyoungjang.org/project/university/","summary":"","title":"University"},{"content":"","permalink":"https://wonyoungjang.org/","summary":"","title":"Wonyoung Jang"},{"content":"Navigation ALT+SHIFT+h → Go to home page\nALT+SHIFT+g → Go back to top\nALT+SHIFT+s → Go to search page\nALT+SHIFT+r → Go to random page\nALT+SHIFT+p → Go to previous page\nALT+SHIFT+n → Go to next page\nAppearance ALT+SHIFT+t → Toggle light/dark themes\n","permalink":"https://wonyoungjang.org/resource/reference/list-of-keyboard-shortcuts-for-wonyoungjang.org/","summary":"Navigation ALT+SHIFT+h → Go to home page\nALT+SHIFT+g → Go back to top\nALT+SHIFT+s → Go to search page\nALT+SHIFT+r → Go to random page\nALT+SHIFT+p → Go to previous page\nALT+SHIFT+n → Go to next page\nAppearance ALT+SHIFT+t → Toggle light/dark themes","title":"List of Keyboard Shortcuts for WonyoungJang.org"},{"content":" Introduction This project is a fork of GitHub - mayfer/claude-app-generator-demo outbound , which was a demonstration of Anthropic\u0026rsquo;s Claude 3 Opus outbound generating an app in one go without errors. You can see a demonstration of the generation and the program here: murat on Twitter outbound .\nWhy While the demonstration shows no errors, the instructions in the README were incomplete, and others had trouble with installing the dependencies.\nI also thought it would be a neat alternative to texting people who are in the same area.\nImprovements Included a package.json file for easy installation of dependencies:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 { \u0026#34;scripts\u0026#34;: { \u0026#34;start\u0026#34;: \u0026#34;cd server \u0026amp;\u0026amp; npx ts-node index.ts\u0026#34;, \u0026#34;clean\u0026#34;: \u0026#34;cd server \u0026amp;\u0026amp; rimraf db.sqlite\u0026#34; }, \u0026#34;dependencies\u0026#34;: { \u0026#34;cookie-parser\u0026#34;: \u0026#34;^1.4.6\u0026#34;, \u0026#34;express\u0026#34;: \u0026#34;^4.18.3\u0026#34;, \u0026#34;react\u0026#34;: \u0026#34;^18.2.0\u0026#34;, \u0026#34;react-dom\u0026#34;: \u0026#34;^18.2.0\u0026#34;, \u0026#34;rebuild\u0026#34;: \u0026#34;^0.1.2\u0026#34;, \u0026#34;socket.io\u0026#34;: \u0026#34;^4.7.4\u0026#34;, \u0026#34;socket.io-client\u0026#34;: \u0026#34;^4.7.4\u0026#34;, \u0026#34;sqlite3\u0026#34;: \u0026#34;^5.1.7\u0026#34;, \u0026#34;uuid\u0026#34;: \u0026#34;^9.0.1\u0026#34; }, \u0026#34;devDependencies\u0026#34;: { \u0026#34;@types/cookie-parser\u0026#34;: \u0026#34;^1.4.7\u0026#34;, \u0026#34;@types/express\u0026#34;: \u0026#34;^4.17.21\u0026#34;, \u0026#34;@types/react\u0026#34;: \u0026#34;^18.2.64\u0026#34;, \u0026#34;@types/react-dom\u0026#34;: \u0026#34;^18.2.21\u0026#34;, \u0026#34;@types/uuid\u0026#34;: \u0026#34;^9.0.8\u0026#34;, \u0026#34;rimraf\u0026#34;: \u0026#34;^5.0.5\u0026#34;, \u0026#34;ts-node\u0026#34;: \u0026#34;^10.9.2\u0026#34;, \u0026#34;typescript\u0026#34;: \u0026#34;^5.4.2\u0026#34; } } I am primarily a Windows user, so I created some options for other Windows users. This includes a npm run start script to run the server, and an npm run clean script to clear the database.\n","permalink":"https://wonyoungjang.org/project/software/realtime-multiplayer-drawing-app/","summary":"Introduction This project is a fork of GitHub - mayfer/claude-app-generator-demo outbound , which was a demonstration of Anthropic\u0026rsquo;s Claude 3 Opus outbound generating an app in one go without errors. You can see a demonstration of the generation and the program here: murat on Twitter outbound .\nWhy While the demonstration shows no errors, the instructions in the README were incomplete, and others had trouble with installing the dependencies.","title":"Realtime Multiplayer Drawing App"},{"content":" How it\u0026rsquo;s made Pages (notes, articles, projects) are written in Logseq markdown.\nPages with a public property are exported and converted to Hugo markdown using the Logseq Schrödinger plugin.\nThe exported assets and pages folders are placed in the content folder of this Hugo site.\nhugo -D + hugo serve -D to build and serve the site locally.\nGitHub Actions to serve the site publicly.\n","permalink":"https://wonyoungjang.org/project/software/this-website/","summary":"How it\u0026rsquo;s made Pages (notes, articles, projects) are written in Logseq markdown.\nPages with a public property are exported and converted to Hugo markdown using the Logseq Schrödinger plugin.\nThe exported assets and pages folders are placed in the content folder of this Hugo site.\nhugo -D + hugo serve -D to build and serve the site locally.\nGitHub Actions to serve the site publicly.","title":"This Website"},{"content":" A brief history A nerd snipe from a coworker My coworker nerd sniped outbound me with this problem: Given a set of constraints, can you devise a way to create schedule for the FIRST LEGO League Challenge outbound event we\u0026rsquo;re running later this year? I liked scheduling problems and solving puzzles so it piqued my interest.\nEarly attempts Since this was not a necessary project for my job, I started to work on the problem in my free time.\nI first tried to model how to think about the problem in the first place. I came up with 3 mental models:\nAs a Sudoku puzzle (DFS).\nAs a constraint satisfaction problem (CSP Solvers).\nAs a pathfinding optimization problem (BFS, Djikstra\u0026rsquo;s, and A*).\nWhile I made some progress pursuing each I did not find a fully satisfactory solution.\nGetting my BSCS My job was grant funded for seven months. During this time, I began the third term of getting my degree. When the grant ended, I decided to hunker down and finish the degree in the remaining five months I had left in the term. Given that, I put the scheduling problem on the backburner, working on it only here and there in my spare time.\nCapstone opportunity When I got to the final capstone project for my degree, the requirements (see below) allowed me to create whatever I want, as long as it utilized machine learning in some way. I had never tried applying ML to the scheduling problem, so I decided to revisit it and explore Q-Learning as a potential approach.\nQ-learning implementation I decided against strictly supervised or unsupervised learning for one main reason: There isn\u0026rsquo;t enough historical scheduling data out there to train on.\nSchedules are weird in that each empty space has a kind of quantum existence. And when an empty space is filled with a scheduled team, it ripples out, affecting the potential states of all properties of the schedule. Balancing that with the constraints is the challenge my previous approaches couldn\u0026rsquo;t encapsulate.\nA possible solution? No, not quite yet, but this has been the most promising approach so far, and I am pursuing it further.\nSince existing data isn\u0026rsquo;t sufficient, data is generated for this Q-learner, I think incorporating supervised learning on a large enough corpus of generated schedules may be useful, if not interesting. A large dataset would also allow me to integrate Deep Q-learning and end-to-end neural networks to see if improves things at all.\nConstraints Hard constraints The hard constraints of a schedule are those imposed by the laws of physics and by the logical rules we usually assume without stating explicitly. There are three main hard constraints:\nNon-Overlapping Schedule Constraint: Since teams cannot be in two place at once, a team cannot be scheduled for a time slot if the duration and time of that time slot overlaps with one the team is already scheduled for.\nSimultaneous Match Constraint: A team cannot be scheduled for a round without another team scheduled at the same time on the opposite side of the table.\nEqual Scheduling Constraint: Every team must be scheduled an equal number of times.\nSoft constraints The soft constraints of a schedule are those that maximize fairness. They are not a necessary condition to run a tournament, but aiming for them while scheduling can create a more fair experience for all teams. In the current iteration, there are four soft constraints:\nTable Consistency: Since this competition is about autonomous robots depending on it\u0026rsquo;s environment, tiny inconsistencies between competition tables and even their sides can create a large difference. So I reward the model when a team has less variety in it\u0026rsquo;s scheduled table sides.\nOpponent Variety: Playing with the same opposite team for all rounds is not as fun as playing with a different one each round. The model is rewarded when a team has more variety amongst it\u0026rsquo;s scheduled \u0026ldquo;opponent\u0026rdquo; teams.\nBack to Back Penalty: Teams perform better when they have a chance to rest and prepare after a match. The model is penalized when the schedule places a team in consecutive rounds.\nBreak Time: Teams should be given at least some amount of break during the tournament for rest, adjustments, or repairs to their robots. The model is rewarded when schedules include these breaks.\nTime constraints One constraint I had to grapple with is the Back to Back Penalty. If we assume that the duration of the round will be fully spent at that location, we can assume that teams cannot magically teleport from one location to the next. However, depending on how your event is scheduled, the size of the teams list, or the layout of the event\u0026rsquo;s venue, I\u0026rsquo;ve found teams scheduled back to back is necessary to generate any valid schedules.\nI plan on pursuing this constraint more deeply, and am currently refining the above constraints.\nA roadmap and some current problems sticky_note_2 Last update: 2024-03-18 A schedule validator The model currently generates an optimal schedule based on the Q-table it generates during training.\nIn some cases, this results in incomplete schedules.\nRefining the constraints For very large schedules, the model can appear to take a long time to learn from the soft constraints.\nCurrently, the user can set weights for each soft constraint, but it\u0026rsquo;s unclear what effect this has across many schedule types.\nMaybe: Some way to \u0026ldquo;backpropagate\u0026rdquo; the results of a training schedule to adjust the constraint weights dynamically?\nTest cases The goal would be to generate a large amount of simulated schedules of many varieties. Then to use a supervised learning approach or an end-to-end neural network of sorts. General code cleanup I wrote this in two weeks, so the code is full of spaghetti at the moment.\nAdding: More complete documentation here as well.\nWeb application This is a big maybe at the moment, but the ultimate goal would be to allow any FLLC event organizer to easily use this tool. Generalized scheduling tool If I could find a way to generalize all scheduling problems and allow the user to create any kind of schedule with any kind constraints they want, and maybe solve P = NP along the way\u0026hellip; warning LEGO® is a trademark of the LEGO Group of companies which does not sponsor, authorize or endorse this site. ","permalink":"https://wonyoungjang.org/project/software/first-lego-league-challenge-q-learning-event-scheduler/","summary":"A brief history A nerd snipe from a coworker My coworker nerd sniped outbound me with this problem: Given a set of constraints, can you devise a way to create schedule for the FIRST LEGO League Challenge outbound event we\u0026rsquo;re running later this year? I liked scheduling problems and solving puzzles so it piqued my interest.\nEarly attempts Since this was not a necessary project for my job, I started to work on the problem in my free time.","title":"FIRST LEGO League Challenge Q-Learning Event Scheduler"},{"content":" Premise Sometimes I just want the top voted parent comments of a reddit post.\nConclusion This tool, which let\u0026rsquo;s me save as many as I want to a CSV file, so that I can work with the data outside of reddit.\n","permalink":"https://wonyoungjang.org/project/software/save-top-level-reddit-comments/","summary":"Premise Sometimes I just want the top voted parent comments of a reddit post.\nConclusion This tool, which let\u0026rsquo;s me save as many as I want to a CSV file, so that I can work with the data outside of reddit.","title":"Save Top Level Reddit Comments"},{"content":" warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Familiarize with CoppeliaSim robotics virtual environment and tools\nThoroughly describe a disaster scenario and integrate at least two obstacles within this environment\nCreate or modify a robot equipped with at least two sensors to perform a specific disaster relief task\nJustify the choice of sensors and modifications made to the robot\u0026rsquo;s architecture, explaining how they contribute to the disaster recovery effort\nDescribe how the robot maintains an internal representation of the environment for decision-making\nExplain the robot\u0026rsquo;s implementation of reasoning, knowledge representation, uncertainty, and intelligence in achieving its goal\nDiscuss potential improvements for the prototype, including the application of reinforced learning and advanced search algorithms\n","permalink":"https://wonyoungjang.org/project/university/disaster-recovery-robot-simulation/","summary":"warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Familiarize with CoppeliaSim robotics virtual environment and tools\nThoroughly describe a disaster scenario and integrate at least two obstacles within this environment\nCreate or modify a robot equipped with at least two sensors to perform a specific disaster relief task","title":"Disaster Recovery Robot Simulation"},{"content":" warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Develop a chatbot that recommends one of five computing jobs to students\nImplement a mechanism within the chatbot to recommend specific jobs without a predefined complexity or method\nDocument the development process of the chatbot, exploring various calibration approaches and AI optimization methods\nUse AIML outbound to enhance the chatbot\u0026rsquo;s functionality and address specific training cases\nCreate an installation manual for the chatbot with step-by-step instructions for accessing it on the Pandorabot platform\nAssess the strengths and weaknesses of the Pandorabot environment and AIML in the context of chatbot construction\nDescribe how the chatbot will be monitored and maintained post-deployment to improve user experience\n","permalink":"https://wonyoungjang.org/project/university/cs-career-recommendation-chatbot/","summary":"warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Develop a chatbot that recommends one of five computing jobs to students\nImplement a mechanism within the chatbot to recommend specific jobs without a predefined complexity or method\nDocument the development process of the chatbot, exploring various calibration approaches and AI optimization methods","title":"CS Career Recommendation Chatbot"},{"content":" Problem Logseq outbound does not have a native way to view the character count of your notes (aka pages).\nLogseq\u0026rsquo;s performance is a balance between the number of pages and the size of each page.\nLogseq\u0026rsquo;s graph is difficult to search and prune manually.\nPossible solution Encode Logseq\u0026rsquo;s graph to enable semantic search, then leverage this encoding to develop an automatic pruning tool of some kind.\nImplementation If I want to enable semantic search, then I must embed my graph.\nIf I don\u0026rsquo;t know the size of my graph or its pages, then there exists a chance that embedding my graph could be very costly.\nIf I want to tokenize all the pages in my graph, then I need to iterate through the text of each page.\nIf I have to do that anyways, then I may as well count the characters along the way.\nIf I do both, then I also increment a total counter to get a total count of characters and tokens for my graph.\nIf have the token counts, I can estimate the cost of embedding for OpenAI\u0026rsquo;s three available text-embedding models.\nOutputting the data as a csv file If I output this data as a csv, I can manipulate and format the data. For instance, with conditional formatting:\nSummary This is my answer to efficiently managing large texts within the note-taking tool Logseq outbound , particularly when dealing with extensive book highlights and other sizable content sources, like automatic imports of highlights of large articles from Read-Later apps like Omnivore outbound .\n","permalink":"https://wonyoungjang.org/project/software/logseq-markdown-tokenizer/","summary":"Problem Logseq outbound does not have a native way to view the character count of your notes (aka pages).\nLogseq\u0026rsquo;s performance is a balance between the number of pages and the size of each page.\nLogseq\u0026rsquo;s graph is difficult to search and prune manually.\nPossible solution Encode Logseq\u0026rsquo;s graph to enable semantic search, then leverage this encoding to develop an automatic pruning tool of some kind.\nImplementation If I want to enable semantic search, then I must embed my graph.","title":"Logseq Markdown Tokenizer"},{"content":" warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Implement a hash table data structure (without external libraries) to store package data\nCreate an insertion function to add package details (address, deadline, city, zip code, weight, status) to the hash table\nCreate a lookup function to retrieve package details based on package ID\nWrite a program to simulate package delivery, utilizing provided distance and location data\nEnsure that all packages are delivered with less than a 140 total mileage of all trucks\nCreate an interface allowing users to track package delivery status and view total truck mileage\nExplain the strengths of my delivery algorithm, verify it meets requirements, and suggest two alternative algorithms suitable for the task\nDescribe changes I would implement with hindsight and the reasoning behind the modifications\nConfirm the chosen data structure\u0026rsquo;s suitability and propose two alternative data structures that would also work\n","permalink":"https://wonyoungjang.org/project/university/package-delivery-route-optimization/","summary":"warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Implement a hash table data structure (without external libraries) to store package data\nCreate an insertion function to add package details (address, deadline, city, zip code, weight, status) to the hash table\nCreate a lookup function to retrieve package details based on package ID","title":"Package Delivery Route Optimization"},{"content":" warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Integrate resource bundles in the application for English and French translations, including a welcome message\nImplement multithreading to display the welcome message in both English and French simultaneously\nModify the front end to show reservation prices in USD, CAD, and EUR\nDevelop a Java method to convert time between Eastern, Mountain, and Coordinated Universal Time zones\nDisplay the times of an online presentation at the Landon Hotel in all three time zones using the conversion method\nCreate a Dockerfile to build a single image of the application, encapsulating all code modifications\nTest the Docker image by creating and running a container, ensuring the application functions correctly within the containerized environment\nDescribe a deployment strategy for the multithreaded Spring application to a cloud service, detailing the steps and the chosen cloud service provider\n","permalink":"https://wonyoungjang.org/project/university/hotel-reservation-manager/","summary":"warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Integrate resource bundles in the application for English and French translations, including a welcome message\nImplement multithreading to display the welcome message in both English and French simultaneously\nModify the front end to show reservation prices in USD, CAD, and EUR","title":"Hotel Reservation Manager"},{"content":" warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Create a new Java project using Spring Initializr outbound , incorporating essential dependencies like Spring Data JPA, Rest Repositories, MySQL Driver, and Lombok\nEstablish a GitLab outbound repository for the project, ensuring regular commits and pushes to document progress, and submit the repository URL and branch history upon completion\nConstruct four new packages within the project to organize the codebase: controllers, entities, dao (Data Access Object), and services, focusing on functionalities related to a checkout form and vacation packages list\nDevelop entity classes and an enumerator in the entities package that align with the provided UML diagram, ensuring accurate mapping to the project\u0026rsquo;s MySQL outbound database\nCreate repository interfaces in the dao package that extend JpaRepository, adding cross-origin support to facilitate communication with the Angular front end\nImplement service classes in the services package to handle purchase data and responses, including a checkout service interface and its implementation\nIntegrate validation within the application to ensure the data inputs meet the front-end requirements\nDevelop a REST controller outbound in the controllers package to manage checkout processes, including a post mapping to handle order placements\nAdd five sample customers to the application programmatically, ensuring their data persist correctly without duplication on subsequent application runs\nTest the integrated application by placing an order for a vacation with two excursions, verifying that there are no network errors and the data is correctly stored in the MySQL database, supported by appropriate screenshots\n","permalink":"https://wonyoungjang.org/project/university/vacation-cart-manager/","summary":"warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Create a new Java project using Spring Initializr outbound , incorporating essential dependencies like Spring Data JPA, Rest Repositories, MySQL Driver, and Lombok\nEstablish a GitLab outbound repository for the project, ensuring regular commits and pushes to document progress, and submit the repository URL and branch history upon completion","title":"Vacation Cart Manager"},{"content":" warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Customize the HTML user interface to reflect the specific customer\u0026rsquo;s shop name, product names, and part names\nAdd an About page that accurately describes the customer\u0026rsquo;s company and ensure proper navigation within the application\nIntegrate a sample inventory for the chosen store, including five products and five parts, ensuring no data overwrite and handling duplicates as \u0026ldquo;multi-pack\u0026rdquo; parts\nImplement a Buy Now button in the product list that decrements the product inventory without affecting associated parts and provides purchase feedback\nModify part entities to track maximum and minimum inventory levels, including updates to forms and persistent storage\nIntroduce validation for inventory levels, displaying appropriate error messages for violations of maximum and minimum thresholds\nDevelop at least two unit tests for the new maximum and minimum inventory fields within the PartTest class\n","permalink":"https://wonyoungjang.org/project/university/retail-inventory-manager/","summary":"warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Customize the HTML user interface to reflect the specific customer\u0026rsquo;s shop name, product names, and part names\nAdd an About page that accurately describes the customer\u0026rsquo;s company and ensure proper navigation within the application\nIntegrate a sample inventory for the chosen store, including five products and five parts, ensuring no data overwrite and handling duplicates as \u0026ldquo;multi-pack\u0026rdquo; parts","title":"Retail Inventory Manager"},{"content":" warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Create a real-world business report using data extracted and analyzed from the DVD Rental Database\nSummarize the business report, ensuring it is answerable, useful to the business, and focused on a specific metric/dimension\nIdentify necessary data tables and specific fields required for both the detailed and summary sections of the report\nExplain the transformation required for a specific field in the detailed section\nClarify the business uses of both report sections and the frequency at which the report should be refreshed\nDevelop SQL code for creating report tables, extracting raw data, applying data transformations, and creating a trigger to update the summary table automatically\nImplement a stored procedure to refresh data in the report tables, including the ETL load process, with a clear schedule for execution\n","permalink":"https://wonyoungjang.org/project/university/dvd-rental-database-revenue-insights/","summary":"warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Create a real-world business report using data extracted and analyzed from the DVD Rental Database\nSummarize the business report, ensuring it is answerable, useful to the business, and focused on a specific metric/dimension\nIdentify necessary data tables and specific fields required for both the detailed and summary sections of the report","title":"DVD Rental Database Revenue Insights"},{"content":"![🖼 student- record-system.webp](/assets/student- record-system.webp)\nwarning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Migrate an existing student system to a new platform, focusing on data manipulation and student roster maintenance\nDevelop a program with two main classes: Student and Roster, to manage student data and course enrollment\nEnsure the program reads and processes a list of five students, creating student objects from the provided data\nStore the student list in an array called classRosterArray, with specific output directed to the console\nInclude essential student information like ID, name, email, age, course completion days, and degree program\nModify the StudentData table as required, and create six specific files (main.cpp, degree.h, student.h/cpp, roster.h/cpp) with appropriate source and header separations\nDefine an enumerated data type DegreeProgram with values SECURITY, NETWORK, and SOFTWARE\nImplement and use accessor and mutator functions in the Student class for data manipulation, along with a constructor and a print function\nDevelop the Roster class to manage the student data array, including functions to add, remove, print, and manage student data based on specific criteria like degree program and average days in courses\nDemonstrate program functionality in main.cpp with specific function calls and logic to manage and display student data effectively, including handling invalid email addresses and specific student removal scenarios.\nImplement memory management practices, ensuring the dynamic memory allocated in Roster is appropriately released\n","permalink":"https://wonyoungjang.org/project/university/student-record-system/","summary":"![🖼 student- record-system.webp](/assets/student- record-system.webp)\nwarning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Migrate an existing student system to a new platform, focusing on data manipulation and student roster maintenance\nDevelop a program with two main classes: Student and Roster, to manage student data and course enrollment\nEnsure the program reads and processes a list of five students, creating student objects from the provided data","title":"Student Record System"},{"content":" warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Design a normalized physical database model for an ordering system (Bagel Corner)\nCreate a database for another business (Mister Coffee) using a provided design document\nLoad tables with sample data and create a view and an index to enhance query performance\nDevelop SQL queries, including a simple query and a more complex query involving table joins\n","permalink":"https://wonyoungjang.org/project/university/bagel-corner-and-mister-coffee-database-management/","summary":"warning This project was completed for coursework and is no longer maintained. Names and details have been modified for academic integrity. Below is a summary of the university\u0026rsquo;s main requirements. Requirements Design a normalized physical database model for an ordering system (Bagel Corner)\nCreate a database for another business (Mister Coffee) using a provided design document\nLoad tables with sample data and create a view and an index to enhance query performance","title":"Bagel Corner and Mister Coffee Database Management"},{"content":"\u003c!DOCTYPE html\u003e ","permalink":"https://wonyoungjang.org/graph/","summary":"\u003c!DOCTYPE html\u003e ","title":""}]