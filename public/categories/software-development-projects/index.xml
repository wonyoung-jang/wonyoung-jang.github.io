<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Software Development Projects on Wonyoung Jang</title>
    <link>https://wonyoungjang.org/categories/software-development-projects/</link>
    <description>Recent content in Software Development Projects on Wonyoung Jang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://wonyoungjang.org/categories/software-development-projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Realtime Multiplayer Drawing App</title>
      <link>https://wonyoungjang.org/pages/realtime-multiplayer-drawing-app/</link>
      <pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://wonyoungjang.org/pages/realtime-multiplayer-drawing-app/</guid>
      <description>Draw in realtime on a blank canvas with others on the same server.
Introduction This project is a fork of GitHub - mayfer/claude-app-generator-demo, which was a demonstration of Anthropic&amp;rsquo;s Claude 3 Opus generating an app in one go without errors. You can see a demonstration of the generation and the program here: murat on Twitter.
Why Did I Fork This? While the demonstration shows no errors, the instructions in the README were incomplete, and others had trouble with installing the dependencies.</description>
    </item>
    
    <item>
      <title>This Website</title>
      <link>https://wonyoungjang.org/pages/this-website/</link>
      <pubDate>Tue, 05 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://wonyoungjang.org/pages/this-website/</guid>
      <description>This page is a meta presentation for the deployment of this website (and this page).
How It&amp;rsquo;s Made Pages (notes, articles, projects) are written in Logseq markdown.
Pages with a public property are exported and converted to Hugo markdown using the Logseq Schr√∂dinger plugin.
The exported assets and pages folders are placed in the content folder of this Hugo site.
hugo -D + hugo serve -D to build and serve the site locally.</description>
    </item>
    
    <item>
      <title>FIRST LEGO League Challenge Q-Learning Event Scheduler</title>
      <link>https://wonyoungjang.org/pages/first-lego-league-challenge-q-learning-event-scheduler/</link>
      <pubDate>Sun, 25 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://wonyoungjang.org/pages/first-lego-league-challenge-q-learning-event-scheduler/</guid>
      <description>A FLLC event scheduler using Q-Learning.
Update 2024-03-18: Minimally reformatted and refactored. Organization I couldn&amp;rsquo;t do in the one month span to complete a functional product for the course. Began writing out a brief history on this project.A Brief History A Nerd Snipe from a Coworker My coworker nerd sniped me with this problem: Given a set of constraints, can you devise a way to create schedule for the FIRST LEGO League Challenge event we&amp;rsquo;re running later this year?</description>
    </item>
    
    <item>
      <title>Save Top Level Reddit Comments</title>
      <link>https://wonyoungjang.org/pages/save-top-level-reddit-comments/</link>
      <pubDate>Sun, 28 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://wonyoungjang.org/pages/save-top-level-reddit-comments/</guid>
      <description>Extract the parent comments of a reddit post.
Premise Sometimes I just want the top voted parent comments of a reddit post.
Conclusion This tool, which let&amp;rsquo;s me save as many as I want to a CSV file, so that I can work with the data outside of reddit.</description>
    </item>
    
    <item>
      <title>Logseq Markdown Tokenizer</title>
      <link>https://wonyoungjang.org/pages/logseq-markdown-tokenizer/</link>
      <pubDate>Sat, 13 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://wonyoungjang.org/pages/logseq-markdown-tokenizer/</guid>
      <description>Estimate the cost of tokenizing markdown files for OpenAI&amp;rsquo;s text-embedding models.
The Problem Logseq does not have a native way to view the character count of your notes (aka pages).
Logseq&amp;rsquo;s performance is a balance between the number of pages and the size of each page.
Logseq&amp;rsquo;s graph is difficult to search and prune manually.
Proposed Solution Encode Logseq&amp;rsquo;s graph to enable semantic search, then leverage this encoding to develop an automatic pruning tool of some kind.</description>
    </item>
    
  </channel>
</rss>
